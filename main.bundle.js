(()=>{"use strict";const t=t=>{const e=Array.from({length:t},(()=>Array(t).fill(null))),o=[],n=(t,o)=>e[t][o],a=(t,e)=>null!==n(t,e),r=(t,n)=>{const a=e[t][n];return Number.isInteger(a)?o[a]:void 0};return{placeShip:(n,r,l,i)=>{if(!((e,o,n,r)=>{if("horizontal"===r&&o+n>t)return!1;if("vertical"===r&&e+n>t)return!1;for(let t=0;t<n;t++)if(a("vertical"===r?e+t:e,"horizontal"===r?o+t:o))return!1;return!0})(n,r,l,i))throw new Error("Invalid placement: Out of bounds or overlapping.");const s=((t,e,o,n)=>{let a=0;return{length:t,direction:e,startRow:o,startCol:n,getHits:()=>a,hit:()=>{++a},isSunk:()=>a>=t}})(l,i,n,r),c=o.length;o.push(s);for(let t=0;t<l;t++){const o="horizontal"===i?r+t:r;e["vertical"===i?n+t:n][o]=c}},getCell:n,hasShip:a,getShip:r,getAllShips:()=>[...o],receiveAttack:(t,o)=>{const a=n(t,o);if(null===a)return e[t][o]="X","X";if(Number.isInteger(a)){const n=r(t,o);if(n)return n.hit(),e[t][o]="H","H"}return console.log("Cell already attacked... Skipping..."),"Cell already attacked... Skipping..."},isAllShipsSunken:()=>o.every((t=>t.isSunk())),getGrid:()=>e,getShipPositions:()=>o.map((({startRow:t,startCol:e,length:o,direction:n})=>({startRow:t,startCol:e,length:o,direction:n}))),getShipIndex:(t,e)=>o.find((o=>{const{startRow:n,startCol:a,length:r,direction:l}=o;return"horizontal"===l?t===n&&e>=a&&e<a+r:e===a&&t>=n&&t<n+r}))||void 0}},e=e=>({name:e,ownBoard:t(10)}),o=(()=>{let t="hunt",e=null,o=[];const n=new Set;let a=null,r=null,l=0;return{getState:()=>t,setState:e=>t=e,getLastHit:()=>e,setLastHit:t=>e=t,addPotentialTargets:t=>o.push(...t),getNextTarget:()=>o.length>0?o.shift():null,clearPotentialTargets:()=>o=[],getPotentialTargets:()=>[...o],markCellAsAttacked:(t,e)=>n.add(`${t}, ${e}`),hasCellBeenAttacked:(t,e)=>n.has(`${t}, ${e}`),getShipOrientation:()=>a,setShipOrientation:t=>a=t,getAttackDirection:()=>r,setAttackDirection:t=>r=t,getCurrentShipLength:()=>l,setCurrentShipLength:t=>l=t,resetCurrentShipLength:()=>l=0}})(),n=e("player-1");n.ownBoard.placeShip(4,3,5,"horizontal"),n.ownBoard.placeShip(6,4,4,"vertical"),n.ownBoard.placeShip(2,1,3,"horizontal"),n.ownBoard.placeShip(1,8,2,"vertical"),n.ownBoard.placeShip(0,4,3,"horizontal"),n.ownBoard.placeShip(8,6,3,"horizontal");const a=e("player-2");a.ownBoard.placeShip(0,1,5,"horizontal"),a.ownBoard.placeShip(3,2,4,"vertical"),a.ownBoard.placeShip(7,5,3,"vertical"),a.ownBoard.placeShip(5,5,3,"horizontal"),a.ownBoard.placeShip(2,6,2,"horizontal"),a.ownBoard.placeShip(2,4,2,"vertical");const r=t=>{const{setState:e,setLastHit:o,setShipOrientation:n,clearPotentialTargets:a}=t;e("hunt"),o(null),n(null),a(),console.log("Computer player reset to hunt mode.")},l=(t,e,o)=>{const{addPotentialTargets:n,getShipOrientation:a,hasCellBeenAttacked:r}=t;if("horizontal"===a()){let t=o-1;for(;t>=0&&!r(e,t);)n([{row:e,col:t}]),t--;let a=o+1;for(;a<10&&!r(e,a);)n([{row:e,col:a}]),a++}else if("vertical"===a()){let t=e-1;for(;t>=0&&!r(t,o);)n([{row:t,col:o}]),t--;let a=e+1;for(;a<10&&!r(a,o);)n([{row:a,col:o}]),a++}},i=(t,e)=>[{row:t-1,col:e},{row:t+1,col:e},{row:t,col:e-1},{row:t,col:e+1}].filter((({row:t,col:e})=>t>=0&&t<10&&e>=0&&e<10));const s=(t,e)=>{const d=c.getCurrentPlayer()===n?a:n,h=d.ownBoard.receiveAttack(t,e);p(t,e,d.name,h),d.ownBoard.isAllShipsSunken()&&u(),c.swapTurns();const m=c.getCurrentPlayer();return g(m),m===a&&setTimeout((()=>{(t=>{const e=c.getCurrentPlayer()===n?a:n,{getState:o}=t;"hunt"===o()?((t,e)=>{const{setState:o,setLastHit:n,getLastHit:a,addPotentialTargets:l,hasCellBeenAttacked:c,markCellAsAttacked:d}=t;let h,p;do{({randomRow:h,randomCol:p}={randomRow:Math.floor(10*Math.random()),randomCol:Math.floor(10*Math.random())})}while(c(h,p));const u=s(h,p);if(d(h,p),"H"===u){const s=e.ownBoard.getShipIndex(h,p);s&&s.isSunk()?(console.log(`Ship at (${h}, ${p}) is sunk! Resetting to hunt mode...`),r(t)):(o("target"),n({row:h,col:p}),console.log("Last hit: ",a()),l(i(h,p)))}})(t,e):"target"===o()&&((t,e)=>{const{getNextTarget:o,getLastHit:n,setShipOrientation:a,getShipOrientation:i,hasCellBeenAttacked:c,markCellAsAttacked:d,getAttackDirection:h,setAttackDirection:p,getCurrentShipLength:u,setCurrentShipLength:g,resetCurrentShipLength:m}=t;let S;do{S=o()}while(null!==S&&c(S.row,S.col));if(null!==S){const{row:o,col:c}=S,w=s(o,c);if(d(o,c),"H"===w){const s=e.ownBoard.getShipIndex(o,c);if(s&&s.isSunk())console.log(`Ship at (${o}, ${c}) is sunk! Resetting to hunt mode...`),r(t),m();else{if(null===i()){const{row:t,col:e}=n();console.log(`Last hit: (${t}, ${e}), Current hit: (${o}, ${c})`),o===t?(a("horizontal"),console.log("Detected ship orientation: horizontal")):c===e&&(a("vertical"),console.log("Detected ship orientation: vertical"))}g(u()+1),l(t,o,c)}}else if("X"===w){console.log("That's a miss! Backtracking...");const e=h();p("right"===e?"left":"left"===e?"right":"up"===e?"down":"up"),l(t,o,c)}}else console.log("No more valid targets! Resetting to hunt mode..."),r(t),m()})(t,e)})(o)}),50),h},c=(()=>{let t=n;return{swapTurns:()=>t=t===n?a:n,getCurrentPlayer:()=>t,isPlayerTurn:e=>e===t}})(),d=(t,e)=>{const o=t.ownBoard.getGrid().length,n=t.name,a=document.createElement("div");a.classList.add("game-board"),a.id=n;for(let n=0;n<o;n++){const r=document.createElement("div");r.classList.add("column");for(let a=0;a<o;a++){const o=document.createElement("div");o.classList.add("cell"),o.dataset.row=a,o.dataset.col=n;const l=t.ownBoard.hasShip(a,n);"player-2"!==t.name&&l&&o.classList.add("ship"),o.addEventListener("click",(()=>e(a,n,t))),r.appendChild(o)}a.appendChild(r)}return a},h=(t,e)=>{t=Number(t),e=Number(e),s(t,e)},p=(t,e,o,n)=>((t,e,o,n)=>{const a=((t,e,o)=>document.getElementById(o).querySelector(`[data-row="${t}"][data-col="${e}"]`))(t,e,o);"H"===n?(a.classList.remove("ship"),a.classList.add("hit")):"X"===n&&a.classList.add("miss"),a.classList.add("disabled")})(t,e,o,n),u=()=>{(()=>{const t=document.createElement("div");t.classList.add("overlay");const e=document.createElement("div");e.classList.add("announcement-card");const o=document.createElement("h2");o.textContent="Game Over";const n=document.createElement("button");n.textContent="Close",n.addEventListener("click",(()=>{document.getElementById("root").removeChild(t)})),e.appendChild(o),e.appendChild(n),t.appendChild(e),document.getElementById("root").appendChild(t)})()},g=t=>(t=>{const e=document.querySelector("#player-1"),o=document.querySelector("#player-2");"player-1"===t.name?(e.classList.add("disabled"),o.classList.remove("disabled")):"player-2"===t.name&&(o.classList.add("disabled"),e.classList.remove("disabled"))})(t);((t,e)=>{const o=document.createElement("div");o.classList.add("container");const n=d(t,h),a=d(e,h);o.append(n,a),document.getElementById("root").appendChild(o)})(n,a)})();
//# sourceMappingURL=main.bundle.js.map