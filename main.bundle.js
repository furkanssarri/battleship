(()=>{"use strict";const e=e=>{const t=Array.from({length:e},(()=>Array(e).fill(null))),n=[],a=(e,n)=>t[e][n],r=(e,t)=>null!==a(e,t),o=(e,a)=>{const r=t[e][a];return Number.isInteger(r)?n[r]:void 0};return{placeShip:(a,o,l,s)=>{if(!((t,n,a,o)=>{if("horizontal"===o&&n+a>e)return!1;if("vertical"===o&&t+a>e)return!1;for(let e=0;e<a;e++)if(r("vertical"===o?t+e:t,"horizontal"===o?n+e:n))return!1;return!0})(a,o,l,s))throw new Error("Invalid placement: Out of bounds or overlapping.");const d=((e,t,n,a)=>{let r=0;return{length:e,direction:t,startRow:n,startCol:a,getHits:()=>r,hit:()=>{++r},isSunk:()=>r>=e}})(l,s,a,o),i=n.length;n.push(d);for(let e=0;e<l;e++){const n="horizontal"===s?o+e:o;t["vertical"===s?a+e:a][n]=i}},getCell:a,hasShip:r,getShip:o,getAllShips:()=>[...n],receiveAttack:(e,n)=>{const r=a(e,n);if(null===r)return t[e][n]="X","X";if(Number.isInteger(r)){const a=o(e,n);if(a)return a.hit(),t[e][n]="H","H"}return console.log("Cell already attacked... Skipping..."),"Cell already attacked... Skipping..."},isAllShipsSunken:()=>n.every((e=>e.isSunk())),getGrid:()=>t,getShipPositions:()=>n.map((({startRow:e,startCol:t,length:n,direction:a})=>({startRow:e,startCol:t,length:n,direction:a}))),getShipIndex:(e,t)=>n.find((n=>{const{startRow:a,startCol:r,length:o,direction:l}=n;return"horizontal"===l?e===a&&t>=r&&t<r+o:t===r&&e>=a&&e<a+o}))||void 0}},t=t=>({name:t,ownBoard:e(10)}),n=t("player-1");n.ownBoard.placeShip(8,6,3,"horizontal");const a=t("player-2");a.ownBoard.placeShip(0,1,5,"horizontal");const r=()=>{const e=Math.floor(10*Math.random()),t=Math.floor(10*Math.random());o(e,t,a)},o=(e,t,n,o)=>{n.ownBoard.receiveAttack(e,t),l.swapTurns();const s=l.getCurrentPlayer();u(s),n.ownBoard.isAllShipsSunken()&&c(),s===a&&setTimeout(r,1e3),i(e,t,n,o)},l=(()=>{let e=n;return{swapTurns:()=>e=e===n?a:n,getCurrentPlayer:()=>e,isPlayerTurn:t=>t===e}})(),s=(e,t)=>{const n=e.ownBoard.getGrid().length,a=e.name,r=document.createElement("div");r.classList.add("game-board"),r.id=a;for(let a=0;a<n;a++){const o=document.createElement("div");o.classList.add("column");for(let r=0;r<n;r++){const n=document.createElement("div");n.classList.add("cell"),n.dataset.row=r,n.dataset.col=a,e.ownBoard.hasShip(r,a)&&n.classList.add("ship"),n.addEventListener("click",(()=>t(r,a,e))),o.appendChild(n)}r.appendChild(o)}return r},d=(e,t,n)=>{e=Number(e),t=Number(t);const a=!!n.ownBoard.hasShip(e,t);o(e,t,n,a)},i=(e,t,n,a)=>((e,t,n,a)=>{const r=((e,t,n)=>document.getElementById(n).querySelector(`[data-row="${e}"][data-col="${t}"]`))(e,t,n);a?(r.classList.remove("ship"),r.classList.add("hit")):r.classList.add("miss"),r.classList.add("disabled")})(e,t,n.name,a),c=()=>{(()=>{const e=document.createElement("div");e.classList.add("overlay");const t=document.createElement("div");t.classList.add("announcement-card");const n=document.createElement("h2");n.textContent="Game Over";const a=document.createElement("button");a.textContent="Close",a.addEventListener("click",(()=>{document.getElementById("root").removeChild(e)})),t.appendChild(n),t.appendChild(a),e.appendChild(t),document.getElementById("root").appendChild(e)})()},u=e=>(e=>{const t=document.querySelector("#player-1"),n=document.querySelector("#player-2");"player-1"===e.name?(t.classList.remove("disabled"),n.classList.add("disabled")):"player-2"===e.name&&(n.classList.remove("disabled"),t.classList.add("disabled"))})(e);((e,t)=>{const n=document.createElement("div");n.classList.add("container");const a=s(e,d),r=s(t,d);n.append(a,r),document.getElementById("root").appendChild(n)})(n,a)})();
//# sourceMappingURL=main.bundle.js.map