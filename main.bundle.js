(()=>{"use strict";const t=(t,e,n,o)=>{let a=0;return{length:t,direction:e,startRow:n,startCol:o,getHits:()=>a,hit:()=>{++a},isSunk:()=>a>=t}},e=e=>{const n=Array.from({length:e},(()=>Array(e).fill(null))),o=[],a=(t,e)=>n[t][e],l=(t,e)=>null!==a(t,e),r=(t,e)=>{const a=n[t][e];return Number.isInteger(a)?o[a]:void 0};return{placeShip:(a,r,i,s)=>{if(!((t,n,o,a)=>{if("horizontal"===a&&n+o>e)return!1;if("vertical"===a&&t+o>e)return!1;for(let e=0;e<o;e++)if(l("vertical"===a?t+e:t,"horizontal"===a?n+e:n))return!1;return!0})(a,r,i,s))throw new Error("Invalid placement: Out of bounds or overlapping.");const c=t(i,s,a,r),d=o.length;o.push(c);for(let t=0;t<i;t++){const e="horizontal"===s?r+t:r;n["vertical"===s?a+t:a][e]=d}},getCell:a,hasShip:l,getShip:r,getAllShips:()=>[...o],receiveAttack:(t,e)=>{let o=a(t,e);if(null===o)return n[t][e]="X","X";if(Number.isInteger(o)){const o=r(t,e);if(o)return o.hit(),n[t][e]="H","H"}return console.log("Cell already attacked... Skipping..."),"Cell already attacked... Skipping..."},isAllShipsSunken:()=>o.every((t=>t.isSunk())),getGrid:()=>n,getShipPositions:()=>o.map((({startRow:t,startCol:e,length:n,direction:o})=>({startRow:t,startCol:e,length:n,direction:o}))),getShipIndex:(t,e)=>o.find((n=>{const{startRow:o,startCol:a,length:l,direction:r}=n;return"horizontal"===r?t===o&&e>=a&&e<a+l:e===a&&t>=o&&t<o+l}))||void 0}},n=t=>({name:t,ownBoard:e(10)}),o=(()=>{let t="hunt",e=null,n=[];const o=new Set;let a=null,l=null,r=0;return{getState:()=>t,setState:e=>t=e,getLastHit:()=>e,setLastHit:t=>e=t,addPotentialTargets:t=>n.push(...t),getNextTarget:()=>n.length>0?n.shift():null,clearPotentialTargets:()=>n=[],getPotentialTargets:()=>[...n],markCellAsAttacked:(t,e)=>o.add(`${t}, ${e}`),hasCellBeenAttacked:(t,e)=>o.has(`${t}, ${e}`),getShipOrientation:()=>a,setShipOrientation:t=>a=t,getAttackDirection:()=>l,setAttackDirection:t=>l=t,getCurrentShipLength:()=>r,setCurrentShipLength:t=>r=t,resetCurrentShipLength:()=>r=0}})(),a=n("player-1"),l=n("player-2");l.ownBoard.placeShip(0,1,5,"horizontal"),l.ownBoard.placeShip(3,2,4,"vertical"),l.ownBoard.placeShip(7,5,3,"vertical"),l.ownBoard.placeShip(5,5,3,"horizontal"),l.ownBoard.placeShip(2,6,2,"horizontal"),l.ownBoard.placeShip(2,4,2,"vertical");const r=(()=>{let t="horizontal";return{getVesselOrientation:()=>t,setVesselOrientation:e=>t=e,swapVesselOrientation:()=>t="horizontal"===t?"vertical":"horizontal"}})();let i=0;const s=[{type:"Battleship",ship:t(5)},{type:"Destroyer",ship:t(4)},{type:"Submarine",ship:t(4)},{type:"Carrier",ship:t(3)},{type:"Boat",ship:t(2)}],c=t=>{const{setState:e,setLastHit:n,setShipOrientation:o,clearPotentialTargets:a}=t;e("hunt"),n(null),o(null),a()},d=(t,e,n)=>{const{addPotentialTargets:o,getShipOrientation:a,hasCellBeenAttacked:l}=t;if("horizontal"===a()){let t=n-1;for(;t>=0&&!l(e,t);)o([{row:e,col:t}]),t--;let a=n+1;for(;a<10&&!l(e,a);)o([{row:e,col:a}]),a++}else if("vertical"===a()){let t=e-1;for(;t>=0&&!l(t,n);)o([{row:t,col:n}]),t--;let a=e+1;for(;a<10&&!l(a,n);)o([{row:a,col:n}]),a++}},h=(t,e)=>[{row:t-1,col:e},{row:t+1,col:e},{row:t,col:e-1},{row:t,col:e+1}].filter((({row:t,col:e})=>t>=0&&t<10&&e>=0&&e<10)),p=()=>({randomRow:Math.floor(10*Math.random()),randomCol:Math.floor(10*Math.random())}),u=(t,e)=>{const n=m.getCurrentPlayer()===a?l:a,r=n.ownBoard.receiveAttack(t,e);f(t,e,n.name,r),n.ownBoard.isAllShipsSunken()&&v(),m.swapTurns();const i=m.getCurrentPlayer();return B(i),i===l&&setTimeout((()=>{(t=>{const e=m.getCurrentPlayer()===a?l:a,{getState:n}=t;"hunt"===n()?((t,e)=>{const{setState:n,setLastHit:o,getLastHit:a,addPotentialTargets:l,hasCellBeenAttacked:r,markCellAsAttacked:i}=t;let s,d;do{({randomRow:s,randomCol:d}=p())}while(r(s,d));const m=u(s,d);if(i(s,d),"H"===m){const r=e.ownBoard.getShipIndex(s,d);r&&r.isSunk()?(console.log(`Ship at (${s}, ${d}) is sunk! Resetting to hunt mode...`),c(t)):(n("target"),o({row:s,col:d}),console.log("Last hit: ",a()),l(h(s,d)))}})(t,e):"target"===n()&&((t,e)=>{const{getNextTarget:n,getLastHit:o,setShipOrientation:a,getShipOrientation:l,hasCellBeenAttacked:r,markCellAsAttacked:i,getAttackDirection:s,setAttackDirection:h,getCurrentShipLength:p,setCurrentShipLength:m,resetCurrentShipLength:g}=t;let S;do{S=n()}while(null!==S&&r(S.row,S.col));if(null!==S){const{row:n,col:r}=S,w=u(n,r);if(i(n,r),"H"===w){const i=e.ownBoard.getShipIndex(n,r);if(i&&i.isSunk())console.log(`Ship at (${n}, ${r}) is sunk! Resetting to hunt mode...`),c(t),g();else{if(null===l()){const{row:t,col:e}=o();console.log(`Last hit: (${t}, ${e}), Current hit: (${n}, ${r})`),n===t?(a("horizontal"),console.log("Detected ship orientation: horizontal")):r===e&&(a("vertical"),console.log("Detected ship orientation: vertical"))}m(p()+1),d(t,n,r)}}else if("X"===w){const e=s();h("right"===e?"left":"left"===e?"right":"up"===e?"down":"up"),d(t,n,r)}}else c(t),g()})(t,e)})(o)}),50),r},m=(()=>{let t=a;return{swapTurns:()=>t=t===a?l:a,getCurrentPlayer:()=>t,isPlayerTurn:e=>e===t}})(),g=t=>{const e=document.getElementById(t.name),n=document.getElementById(`${t.name}-popup`),o=t.ownBoard.getGrid().length,a=e=>{if(e)for(let n=0;n<o;n++)for(let a=0;a<o;a++){const o=e.querySelector(`[data-row="${n}"][data-col="${a}"]`),l=t.ownBoard.hasShip(n,a);"player-2"!=t.name&&l&&o.classList.add("ship")}};a(e),a(n)},S=(t,e,n=null)=>{const o=t.ownBoard.getGrid().length,a=n||t.name,l=document.createElement("div");l.classList.add("game-board"),l.id=a;for(let n=0;n<o;n++){const a=document.createElement("div");a.classList.add("column");for(let l=0;l<o;l++){const o=document.createElement("div");o.classList.add("cell"),o.dataset.row=l,o.dataset.col=n;const r=t.ownBoard.hasShip(l,n);"player-2"!==t.name&&r&&o.classList.add("ship"),o.addEventListener("mousedown",(o=>{0===o.button?e(l,n,t,"left"):2===o.button&&e(l,n,t,"right")})),o.addEventListener("contextmenu",(t=>{t.preventDefault()})),a.appendChild(o)}l.appendChild(a)}return l},w=(t,e,n,o)=>{"right"===o?r.swapVesselOrientation():(((t,e)=>{let n=r.getVesselOrientation();const o=(l=a,{placeShipManually:(t,e,n,o)=>{try{return l.ownBoard.placeShip(t,e,n,o),!0}catch(t){return console.log(t.message),!1}},placeShipsRandomly:t=>{t.forEach((t=>{for(;;){const e=Math.floor(Math.random()*l.ownBoard.size),n=Math.floor(Math.random()*l.ownBoard.size),o=Math.random()<.5?"horizontal":"vertical";try{l.ownBoard.placeShip(e,n,t.length,o)}catch(t){}}}))}});var l;if(i<s.length){const l=s[i];o.placeShipManually(t,e,l.ship.length,n)&&(console.log(`${l.type} placed successfully.`),y(a),i++)}i===s.length&&L()})(t,e),g(n))},y=t=>g(t),C=(t,e)=>{t=Number(t),e=Number(e),u(t,e)},f=(t,e,n,o)=>((t,e,n,o)=>{const a=((t,e,n)=>document.getElementById(n).querySelector(`[data-row="${t}"][data-col="${e}"]`))(t,e,n);"H"===o?(a.classList.remove("ship"),a.classList.add("hit")):"X"===o&&a.classList.add("miss"),a.classList.add("disabled")})(t,e,n,o),v=()=>{(()=>{const t=document.createElement("div");t.classList.add("overlay");const e=document.createElement("div");e.classList.add("announcement-card");const n=document.createElement("h2");n.textContent="Game Over";const o=document.createElement("button");o.textContent="Close",o.addEventListener("click",(()=>{document.getElementById("root").removeChild(t)})),e.appendChild(n),e.appendChild(o),t.appendChild(e),document.getElementById("root").appendChild(t)})()},L=()=>(()=>{const t=document.querySelector(".overlay");document.getElementById("root").removeChild(t)})(),B=t=>(t=>{const e=document.querySelector("#player-1"),n=document.querySelector("#player-2");"player-1"===t.name?(e.classList.add("disabled"),n.classList.remove("disabled")):"player-2"===t.name&&(n.classList.add("disabled"),e.classList.remove("disabled"))})(t);((t,e)=>{const n=document.createElement("div");n.classList.add("container");const o=S(t,C),a=S(e,C);n.append(o,a),document.getElementById("root").appendChild(n)})(a,l),(t=>{const e=document.createElement("div");e.classList.add("overlay");const n=document.createElement("div");n.classList.add("place-ships");const o=document.createElement("p");o.textContent="Place your ships",n.appendChild(o);const a=S(t,((t,e,n,o)=>w(t,e,n,o)),`${t.name}-popup`);n.appendChild(a);const l=document.createElement("button");l.textContent="Close",l.addEventListener("click",(()=>{document.getElementById("root").removeChild(e)})),n.appendChild(l),e.appendChild(n),document.getElementById("root").appendChild(e)})(a)})();
//# sourceMappingURL=main.bundle.js.map